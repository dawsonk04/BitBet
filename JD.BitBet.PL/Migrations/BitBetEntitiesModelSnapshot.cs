// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    partial class BitBetEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Value")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fff61a0-df78-4ece-85ac-802f3740ba1f"),
                            HandId = new Guid("805a6d58-4190-4024-ac69-0d15d8bffa93"),
                            Suit = "King",
                            Value = 10
                        },
                        new
                        {
                            Id = new Guid("e4b32f9a-5c97-4a4c-8e74-5809d95daae5"),
                            HandId = new Guid("805a6d58-4190-4024-ac69-0d15d8bffa93"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("d3ca5be3-2fcd-461e-80d9-1bb6ce7b7c74"),
                            HandId = new Guid("d2b6d195-9482-4f49-a5c8-7e920d85b16d"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("16e3e07d-3d3b-42c0-8efc-53026733eda9"),
                            HandId = new Guid("d2b6d195-9482-4f49-a5c8-7e920d85b16d"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("2dfc3967-9625-453e-9ed1-2608a8bbaaa8"),
                            HandId = new Guid("7c1b0a94-957d-410c-82db-21502bcf2b19"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("ac038e34-1ba7-4e08-978d-f2fcca925497"),
                            HandId = new Guid("7c1b0a94-957d-410c-82db-21502bcf2b19"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("0a260ae3-b8bd-42d1-a6f6-f027c1666811"),
                            HandId = new Guid("10a7b372-1570-49ea-94e2-44705c69aea5"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("db3d0a34-efbe-4c5b-98a9-9d274bf4e8ff"),
                            HandId = new Guid("10a7b372-1570-49ea-94e2-44705c69aea5"),
                            Suit = "King",
                            Value = 1
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("336f71ec-964e-4a6e-a431-a5f3dfa7a9ad"),
                            GameResult = 200.0,
                            UserId = new Guid("30500618-4314-4e7a-813d-b9fe560bce26")
                        },
                        new
                        {
                            Id = new Guid("8043372f-ba35-474e-8a28-5b30222b95cc"),
                            GameResult = 200.0,
                            UserId = new Guid("30500618-4314-4e7a-813d-b9fe560bce26")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("30500618-4314-4e7a-813d-b9fe560bce26"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("fe9c7925-52f0-476d-ac11-03ce6e0368aa"),
                            CreateDate = new DateTime(2024, 11, 20, 17, 14, 36, 729, DateTimeKind.Local).AddTicks(5720),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7b98366-8a7a-4b99-9365-738f52a023b2"),
                            Balance = 0.0,
                            UserId = new Guid("30500618-4314-4e7a-813d-b9fe560bce26"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("a092792e-32f4-4823-88b1-b347d94722a7"),
                            Balance = 0.0,
                            UserId = new Guid("fe9c7925-52f0-476d-ac11-03ce6e0368aa"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a85c65c2-85bb-4745-8bd2-7fd70d38c6f9"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("30500618-4314-4e7a-813d-b9fe560bce26")
                        },
                        new
                        {
                            Id = new Guid("2e47f3ce-b2e1-4eb7-a04a-f6fab1832c75"),
                            ErrorDateTime = new DateTime(2024, 11, 20, 17, 14, 36, 729, DateTimeKind.Local).AddTicks(9150),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("fe9c7925-52f0-476d-ac11-03ce6e0368aa")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("GameId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("805a6d58-4190-4024-ac69-0d15d8bffa93"),
                            BetAmount = 20.0,
                            GameId = new Guid("336f71ec-964e-4a6e-a431-a5f3dfa7a9ad"),
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("d2b6d195-9482-4f49-a5c8-7e920d85b16d"),
                            BetAmount = 20.0,
                            GameId = new Guid("8043372f-ba35-474e-8a28-5b30222b95cc"),
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("7c1b0a94-957d-410c-82db-21502bcf2b19"),
                            BetAmount = 20.0,
                            GameId = new Guid("336f71ec-964e-4a6e-a431-a5f3dfa7a9ad"),
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("10a7b372-1570-49ea-94e2-44705c69aea5"),
                            BetAmount = 20.0,
                            GameId = new Guid("8043372f-ba35-474e-8a28-5b30222b95cc"),
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c853337c-4f10-4e7a-9b64-6539a521c288"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("b7b98366-8a7a-4b99-9365-738f52a023b2")
                        },
                        new
                        {
                            Id = new Guid("a88d636d-2d10-4497-954b-718038a71802"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 20, 17, 14, 36, 729, DateTimeKind.Local).AddTicks(7208),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("b7b98366-8a7a-4b99-9365-738f52a023b2")
                        },
                        new
                        {
                            Id = new Guid("7d0a014a-b30e-45f1-92f6-aeba900a7f02"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 11, 20, 17, 14, 36, 729, DateTimeKind.Local).AddTicks(7223),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("a092792e-32f4-4823-88b1-b347d94722a7")
                        },
                        new
                        {
                            Id = new Guid("8381b836-58d3-421b-b92c-49791bab5873"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 20, 17, 14, 36, 729, DateTimeKind.Local).AddTicks(7233),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("a092792e-32f4-4823-88b1-b347d94722a7")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", "Game")
                        .WithMany("Hands")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblHand_GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Hands");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
