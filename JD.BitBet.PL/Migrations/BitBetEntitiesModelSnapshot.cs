// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    partial class BitBetEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("962b1733-0faf-473f-99ba-1436d74217b7"),
                            HandId = new Guid("8747a77c-7d1c-4a76-a488-435d2bdf159f"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("a86f1ed9-1e74-4002-804d-478e1c474248"),
                            HandId = new Guid("8747a77c-7d1c-4a76-a488-435d2bdf159f"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("7cb4a705-81aa-4744-9a96-4fbb1d169613"),
                            HandId = new Guid("282d1f13-1f8b-4478-b22e-e2e2f2beb68b"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("29019589-08aa-447d-997f-2873a6620071"),
                            HandId = new Guid("282d1f13-1f8b-4478-b22e-e2e2f2beb68b"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("ecb6f13c-1bdd-4b28-a25a-a38b94ce2775"),
                            HandId = new Guid("5185bd44-4b26-4ef6-bb87-6b8603dc44d2"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("03e9232a-6201-425e-8b2c-3c416f4a7e4f"),
                            HandId = new Guid("5185bd44-4b26-4ef6-bb87-6b8603dc44d2"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("5c52498d-5126-459b-a50f-e7f0f6be9d61"),
                            HandId = new Guid("719d5b36-caad-435f-92c0-dfdfc9beb8cf"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("75fdb517-8b1c-4010-8fd1-72588f726c3d"),
                            HandId = new Guid("719d5b36-caad-435f-92c0-dfdfc9beb8cf"),
                            Rank = 10,
                            Suit = "King"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac73baa9-f5ae-462e-b71b-0df6c099344f"),
                            GameResult = 200.0,
                            UserId = new Guid("84787ee0-e12a-4192-a3c8-c249ddb5fd68")
                        },
                        new
                        {
                            Id = new Guid("0f035df1-e979-418d-945d-3ca7b74f8208"),
                            GameResult = 200.0,
                            UserId = new Guid("84787ee0-e12a-4192-a3c8-c249ddb5fd68")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dealerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("dealerHandVal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<bool>("isGameOver")
                        .HasColumnType("bit");

                    b.Property<bool>("isPlayerTurn")
                        .HasColumnType("bit");

                    b.Property<Guid>("playerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("playerHandVal")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Pk__tblGameState_Id");

                    b.HasIndex("dealerHandId");

                    b.HasIndex("playerHandId");

                    b.ToTable("tblGameState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef3e83e9-7819-4246-a302-c4c3a6dc28cf"),
                            dealerHandId = new Guid("8747a77c-7d1c-4a76-a488-435d2bdf159f"),
                            dealerHandVal = 20,
                            isGameOver = true,
                            isPlayerTurn = true,
                            playerHandId = new Guid("282d1f13-1f8b-4478-b22e-e2e2f2beb68b"),
                            playerHandVal = 20
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("84787ee0-e12a-4192-a3c8-c249ddb5fd68"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("6bc48df7-9306-49cb-980f-8ab44078d991"),
                            CreateDate = new DateTime(2024, 11, 22, 15, 41, 17, 706, DateTimeKind.Local).AddTicks(8948),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d728afbd-d963-4b2c-b315-2569088f6026"),
                            Balance = 0.0,
                            UserId = new Guid("84787ee0-e12a-4192-a3c8-c249ddb5fd68"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("902f5cbf-00fe-49ca-90aa-bc143de88f7b"),
                            Balance = 0.0,
                            UserId = new Guid("6bc48df7-9306-49cb-980f-8ab44078d991"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc7ac670-6c91-47d0-95ca-1c94bf9d601b"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("84787ee0-e12a-4192-a3c8-c249ddb5fd68")
                        },
                        new
                        {
                            Id = new Guid("5e63326e-7dd4-4cf6-9776-33016b7ac2ac"),
                            ErrorDateTime = new DateTime(2024, 11, 22, 15, 41, 17, 707, DateTimeKind.Local).AddTicks(2521),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("6bc48df7-9306-49cb-980f-8ab44078d991")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid?>("tblGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("tblGameId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8747a77c-7d1c-4a76-a488-435d2bdf159f"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("282d1f13-1f8b-4478-b22e-e2e2f2beb68b"),
                            BetAmount = 20.0,
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("5185bd44-4b26-4ef6-bb87-6b8603dc44d2"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("719d5b36-caad-435f-92c0-dfdfc9beb8cf"),
                            BetAmount = 20.0,
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c48cf79-ed9d-4a42-ae70-b064c019332f"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("d728afbd-d963-4b2c-b315-2569088f6026")
                        },
                        new
                        {
                            Id = new Guid("5287f43a-a857-47f3-ad92-805a3e94cc1e"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 22, 15, 41, 17, 707, DateTimeKind.Local).AddTicks(773),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("d728afbd-d963-4b2c-b315-2569088f6026")
                        },
                        new
                        {
                            Id = new Guid("e39301df-56d1-4827-b1e7-9a7c84b5eb54"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 11, 22, 15, 41, 17, 707, DateTimeKind.Local).AddTicks(790),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("902f5cbf-00fe-49ca-90aa-bc143de88f7b")
                        },
                        new
                        {
                            Id = new Guid("72444c44-0a32-4d38-99f8-2682fc68d415"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 22, 15, 41, 17, 707, DateTimeKind.Local).AddTicks(801),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("902f5cbf-00fe-49ca-90aa-bc143de88f7b")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "dealerHand")
                        .WithMany()
                        .HasForeignKey("dealerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("JD.BitBet.PL.tblHand", "playerHand")
                        .WithMany()
                        .HasForeignKey("playerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("dealerHand");

                    b.Navigation("playerHand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", null)
                        .WithMany("Hands")
                        .HasForeignKey("tblGameId");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Hands");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
