// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    partial class BitBetEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fd1c024-849a-4653-b466-6700ac38b562"),
                            HandId = new Guid("53fe86d7-9294-4ba7-ab26-74be36a4a95e"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("8f411241-4bfd-48db-ac84-05ec5cd2e7ec"),
                            HandId = new Guid("53fe86d7-9294-4ba7-ab26-74be36a4a95e"),
                            Rank = 1,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("c44036c5-8200-45e4-9997-5886fd457ae7"),
                            HandId = new Guid("7135bf50-642d-4367-a863-0bc7e324484b"),
                            Rank = 1,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("bc5c8feb-4f53-4d2c-bd28-b48355dd46e7"),
                            HandId = new Guid("7135bf50-642d-4367-a863-0bc7e324484b"),
                            Rank = 1,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("65641182-c7a8-4e84-af58-b1684634f24a"),
                            HandId = new Guid("dc65e7f0-b4ea-4e38-a487-c73fb842678f"),
                            Rank = 1,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("f83dae3e-795c-4ee4-8fb9-75905e59f6fe"),
                            HandId = new Guid("dc65e7f0-b4ea-4e38-a487-c73fb842678f"),
                            Rank = 1,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("2babb764-8455-4b54-8dab-7a2ed8746b31"),
                            HandId = new Guid("9adb68ce-8bd7-469c-9e09-af7e1f46fe6b"),
                            Rank = 1,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("276604c5-f9d7-4165-b83e-99718c919d26"),
                            HandId = new Guid("9adb68ce-8bd7-469c-9e09-af7e1f46fe6b"),
                            Rank = 1,
                            Suit = "King"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("84d42ebb-dd5b-490c-b48b-d60355dda0af"),
                            GameResult = 200.0,
                            UserId = new Guid("aa1b2f7e-666c-43bd-80ac-a197822a5f94")
                        },
                        new
                        {
                            Id = new Guid("f4099c07-c10b-4b2c-a9e1-c7b93aefb3a7"),
                            GameResult = 200.0,
                            UserId = new Guid("aa1b2f7e-666c-43bd-80ac-a197822a5f94")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa1b2f7e-666c-43bd-80ac-a197822a5f94"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("5564f879-8288-4823-97a1-37fe5b39d9f1"),
                            CreateDate = new DateTime(2024, 11, 22, 11, 16, 23, 881, DateTimeKind.Local).AddTicks(322),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9a48182-efe2-4800-9071-fcf548e46aee"),
                            Balance = 0.0,
                            UserId = new Guid("aa1b2f7e-666c-43bd-80ac-a197822a5f94"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("ec04b51c-ea62-4295-a3fc-cf5744e39456"),
                            Balance = 0.0,
                            UserId = new Guid("5564f879-8288-4823-97a1-37fe5b39d9f1"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("865c54a1-6aa0-47c6-afcc-6dc6571ce17c"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("aa1b2f7e-666c-43bd-80ac-a197822a5f94")
                        },
                        new
                        {
                            Id = new Guid("4740a33e-c01e-4a6f-bf19-d60a2b44a343"),
                            ErrorDateTime = new DateTime(2024, 11, 22, 11, 16, 23, 881, DateTimeKind.Local).AddTicks(9004),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("5564f879-8288-4823-97a1-37fe5b39d9f1")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("GameId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("53fe86d7-9294-4ba7-ab26-74be36a4a95e"),
                            BetAmount = 20.0,
                            GameId = new Guid("84d42ebb-dd5b-490c-b48b-d60355dda0af"),
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("7135bf50-642d-4367-a863-0bc7e324484b"),
                            BetAmount = 20.0,
                            GameId = new Guid("f4099c07-c10b-4b2c-a9e1-c7b93aefb3a7"),
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("dc65e7f0-b4ea-4e38-a487-c73fb842678f"),
                            BetAmount = 20.0,
                            GameId = new Guid("84d42ebb-dd5b-490c-b48b-d60355dda0af"),
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("9adb68ce-8bd7-469c-9e09-af7e1f46fe6b"),
                            BetAmount = 20.0,
                            GameId = new Guid("f4099c07-c10b-4b2c-a9e1-c7b93aefb3a7"),
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("827f51fd-b0c5-4862-bfff-b6c9bc905216"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("e9a48182-efe2-4800-9071-fcf548e46aee")
                        },
                        new
                        {
                            Id = new Guid("9bcd1e4b-d648-46a5-8ecd-7d296daa5a69"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 22, 11, 16, 23, 881, DateTimeKind.Local).AddTicks(6469),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("e9a48182-efe2-4800-9071-fcf548e46aee")
                        },
                        new
                        {
                            Id = new Guid("121759be-acc9-4274-a651-47a5e0d8be27"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 11, 22, 11, 16, 23, 881, DateTimeKind.Local).AddTicks(6502),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("ec04b51c-ea62-4295-a3fc-cf5744e39456")
                        },
                        new
                        {
                            Id = new Guid("e88ed73c-bf87-4b2f-8562-3d4edfd1bb66"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 22, 11, 16, 23, 881, DateTimeKind.Local).AddTicks(6512),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("ec04b51c-ea62-4295-a3fc-cf5744e39456")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", "Game")
                        .WithMany("Hands")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblHand_GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Hands");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
