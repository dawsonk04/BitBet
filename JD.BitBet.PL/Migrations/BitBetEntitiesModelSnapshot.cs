// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    partial class BitBetEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c581e5a-34cf-44b9-bd9e-c1f92f91cc71"),
                            HandId = new Guid("8d381b24-702c-4c41-ad01-184e159f5c14"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("9a58b4d9-da55-432f-9a51-b74c108edff3"),
                            HandId = new Guid("8d381b24-702c-4c41-ad01-184e159f5c14"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("a5bc1750-f4f4-4bfb-81f4-5909570789a0"),
                            HandId = new Guid("17babe6a-f8d9-4752-804d-f87b3c2a4712"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("b8677208-98dc-4d25-9836-c5d5938d9527"),
                            HandId = new Guid("17babe6a-f8d9-4752-804d-f87b3c2a4712"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("2fed1e4f-ac22-4584-9b4b-98c533de351a"),
                            HandId = new Guid("67e812ed-46e5-47c5-b678-14c03b4b4abb"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("3253dea8-713e-4a6b-86f7-e0269a0ce16e"),
                            HandId = new Guid("67e812ed-46e5-47c5-b678-14c03b4b4abb"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("182787e4-11ed-4164-926d-129f32f5bfac"),
                            HandId = new Guid("b8d6ed97-1ff5-4ecd-bf24-00f21138c3fe"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("4f271e57-81e7-4c88-a163-d421d0217036"),
                            HandId = new Guid("b8d6ed97-1ff5-4ecd-bf24-00f21138c3fe"),
                            rank = "Ten",
                            suit = "Diamonds"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf08ea01-ae74-4b5b-a235-d04812f3e00f"),
                            GameResult = 200.0,
                            UserId = new Guid("a364545d-0b82-4b12-8f68-4d49cfef25d3")
                        },
                        new
                        {
                            Id = new Guid("5c704396-1c6a-4ebe-b2ed-87ec12d36349"),
                            GameResult = 200.0,
                            UserId = new Guid("a364545d-0b82-4b12-8f68-4d49cfef25d3")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dealerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("dealerHandVal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<bool>("isGameOver")
                        .HasColumnType("bit");

                    b.Property<bool>("isPlayerTurn")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("playerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("playerHandVal")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Pk__tblGameState_Id");

                    b.HasIndex("dealerHandId");

                    b.HasIndex("playerHandId");

                    b.ToTable("tblGameState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("524ec0df-e41c-41ce-8755-980bd97a3f48"),
                            dealerHandId = new Guid("8d381b24-702c-4c41-ad01-184e159f5c14"),
                            dealerHandVal = 20,
                            isGameOver = true,
                            isPlayerTurn = true,
                            message = "Game Over",
                            playerHandId = new Guid("17babe6a-f8d9-4752-804d-f87b3c2a4712"),
                            playerHandVal = 20
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a364545d-0b82-4b12-8f68-4d49cfef25d3"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("322839d4-dee9-43ab-9cb1-71c2fd12888f"),
                            CreateDate = new DateTime(2024, 11, 25, 18, 17, 13, 265, DateTimeKind.Local).AddTicks(5446),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("37e94a2f-78a1-413b-870e-b751cf475bd5"),
                            Balance = 0.0,
                            UserId = new Guid("a364545d-0b82-4b12-8f68-4d49cfef25d3"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("ed86dac4-1562-47b8-bc31-7881a697bd43"),
                            Balance = 0.0,
                            UserId = new Guid("322839d4-dee9-43ab-9cb1-71c2fd12888f"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4c490ad-17b3-4008-b68a-91c3ee5aafbb"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("a364545d-0b82-4b12-8f68-4d49cfef25d3")
                        },
                        new
                        {
                            Id = new Guid("fee51f1c-75fa-40a5-905e-6cbf0de42188"),
                            ErrorDateTime = new DateTime(2024, 11, 25, 18, 17, 13, 265, DateTimeKind.Local).AddTicks(8858),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("322839d4-dee9-43ab-9cb1-71c2fd12888f")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid?>("tblGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("tblGameId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d381b24-702c-4c41-ad01-184e159f5c14"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("17babe6a-f8d9-4752-804d-f87b3c2a4712"),
                            BetAmount = 20.0,
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("67e812ed-46e5-47c5-b678-14c03b4b4abb"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("b8d6ed97-1ff5-4ecd-bf24-00f21138c3fe"),
                            BetAmount = 20.0,
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec447bb6-d4bc-4fcd-9a39-4863eaa00825"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("37e94a2f-78a1-413b-870e-b751cf475bd5")
                        },
                        new
                        {
                            Id = new Guid("52def000-b3aa-4cf7-b16d-e6c7fc6acf99"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 25, 18, 17, 13, 265, DateTimeKind.Local).AddTicks(7178),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("37e94a2f-78a1-413b-870e-b751cf475bd5")
                        },
                        new
                        {
                            Id = new Guid("bd36e1e1-b047-4a2b-8b81-8f0ba9d83c40"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 11, 25, 18, 17, 13, 265, DateTimeKind.Local).AddTicks(7193),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("ed86dac4-1562-47b8-bc31-7881a697bd43")
                        },
                        new
                        {
                            Id = new Guid("b5bbbc57-c100-4549-8e41-a12be8275528"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 25, 18, 17, 13, 265, DateTimeKind.Local).AddTicks(7203),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("ed86dac4-1562-47b8-bc31-7881a697bd43")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "dealerHand")
                        .WithMany()
                        .HasForeignKey("dealerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("JD.BitBet.PL.tblHand", "playerHand")
                        .WithMany()
                        .HasForeignKey("playerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("dealerHand");

                    b.Navigation("playerHand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", null)
                        .WithMany("Hands")
                        .HasForeignKey("tblGameId");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Hands");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
