// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    [Migration("20241203225228_bitbetdb")]
    partial class bitbetdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5839949-3b8f-4809-87f7-2576f8f47d2b"),
                            HandId = new Guid("2dc606e4-2ae9-46c1-8f6a-f2da4a13764c"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("e1f5311c-f576-4659-9232-22862ef19f1a"),
                            HandId = new Guid("2dc606e4-2ae9-46c1-8f6a-f2da4a13764c"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("8dab0ee9-327c-417e-8c70-6b7622bd91f1"),
                            HandId = new Guid("08c25cd7-0b05-4794-88ff-d95796d27900"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("2e610ebe-930c-46f4-8377-c65d4ab681fe"),
                            HandId = new Guid("08c25cd7-0b05-4794-88ff-d95796d27900"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("d6f6fff5-cf1e-4953-ba25-a75a64858c93"),
                            HandId = new Guid("c27c09f7-9893-4635-9d7f-82d1525e6bdb"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("14c622e1-1e5c-4d91-aadf-c5313a8aeaac"),
                            HandId = new Guid("c27c09f7-9893-4635-9d7f-82d1525e6bdb"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("5c44d7c3-bf7b-4754-9de1-cf3efac349a9"),
                            HandId = new Guid("adf851d1-f68c-4e08-b3e3-c5dfa7ea2089"),
                            rank = "Ten",
                            suit = "Diamonds"
                        },
                        new
                        {
                            Id = new Guid("f3bcc768-cd56-41c3-a819-3dbcf504401f"),
                            HandId = new Guid("adf851d1-f68c-4e08-b3e3-c5dfa7ea2089"),
                            rank = "Ten",
                            suit = "Diamonds"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid?>("tblUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("tblUserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c8dbf1a-3ff8-4c6d-b663-5137f0b41f96"),
                            GameResult = 200.0
                        },
                        new
                        {
                            Id = new Guid("20b67422-e4a5-4cb9-b9fe-f4a4e53f502e"),
                            GameResult = 200.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dealerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("dealerHandVal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<bool>("isGameOver")
                        .HasColumnType("bit");

                    b.Property<bool>("isPlayerTurn")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("playerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("playerHandVal")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Pk__tblGameState_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.HasIndex("dealerHandId");

                    b.HasIndex("playerHandId");

                    b.ToTable("tblGameState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ec14922-40e8-481e-aa2a-cf12e69751bb"),
                            GameId = new Guid("4c8dbf1a-3ff8-4c6d-b663-5137f0b41f96"),
                            UserId = new Guid("a460247e-8f29-4b77-9433-bc0ed95cbf2c"),
                            dealerHandId = new Guid("2dc606e4-2ae9-46c1-8f6a-f2da4a13764c"),
                            dealerHandVal = 20,
                            isGameOver = true,
                            isPlayerTurn = true,
                            message = "Game Over",
                            playerHandId = new Guid("08c25cd7-0b05-4794-88ff-d95796d27900"),
                            playerHandVal = 20
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("gameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.HasIndex("gameId");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a460247e-8f29-4b77-9433-bc0ed95cbf2c"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("0d3b174a-08a8-4cdd-9ea3-c171b6fdc0be"),
                            CreateDate = new DateTime(2024, 12, 3, 16, 52, 28, 137, DateTimeKind.Local).AddTicks(3122),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88b1eee4-ee56-47c6-ab77-c818bf438a68"),
                            Balance = 0.0,
                            UserId = new Guid("a460247e-8f29-4b77-9433-bc0ed95cbf2c"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("977d7c99-e479-400f-a027-53fdcb735c5a"),
                            Balance = 0.0,
                            UserId = new Guid("0d3b174a-08a8-4cdd-9ea3-c171b6fdc0be"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d16f66fb-ae5c-444e-81aa-2c08f18abddd"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("a460247e-8f29-4b77-9433-bc0ed95cbf2c")
                        },
                        new
                        {
                            Id = new Guid("35ab8030-7ab8-4d06-8951-75d4a05a70cc"),
                            ErrorDateTime = new DateTime(2024, 12, 3, 16, 52, 28, 137, DateTimeKind.Local).AddTicks(6085),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("0d3b174a-08a8-4cdd-9ea3-c171b6fdc0be")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid?>("tblUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("tblUserId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dc606e4-2ae9-46c1-8f6a-f2da4a13764c"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("08c25cd7-0b05-4794-88ff-d95796d27900"),
                            BetAmount = 20.0,
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("c27c09f7-9893-4635-9d7f-82d1525e6bdb"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("adf851d1-f68c-4e08-b3e3-c5dfa7ea2089"),
                            BetAmount = 20.0,
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9527c70-1076-4b00-a9af-17716916866a"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("88b1eee4-ee56-47c6-ab77-c818bf438a68")
                        },
                        new
                        {
                            Id = new Guid("43bc3884-0b6f-4b43-9228-6daedeabce45"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 12, 3, 16, 52, 28, 137, DateTimeKind.Local).AddTicks(4832),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("88b1eee4-ee56-47c6-ab77-c818bf438a68")
                        },
                        new
                        {
                            Id = new Guid("dc600d0a-1754-45b2-851a-5a0a01341f15"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 12, 3, 16, 52, 28, 137, DateTimeKind.Local).AddTicks(4852),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("977d7c99-e479-400f-a027-53fdcb735c5a")
                        },
                        new
                        {
                            Id = new Guid("a8eb764b-8dc8-41f5-95e5-7c1f5eca01ab"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 12, 3, 16, 52, 28, 137, DateTimeKind.Local).AddTicks(4867),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("977d7c99-e479-400f-a027-53fdcb735c5a")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", null)
                        .WithMany("Games")
                        .HasForeignKey("tblUserId");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", "game")
                        .WithMany("GameStates")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK_tblGameState_GameId");

                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JD.BitBet.PL.tblHand", "dealerHand")
                        .WithMany()
                        .HasForeignKey("dealerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("JD.BitBet.PL.tblHand", "playerHand")
                        .WithMany()
                        .HasForeignKey("playerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("dealerHand");

                    b.Navigation("game");

                    b.Navigation("playerHand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", "Game")
                        .WithMany("Users")
                        .HasForeignKey("gameId")
                        .HasConstraintName("FK_tblUser_GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", null)
                        .WithMany("Hands")
                        .HasForeignKey("tblUserId");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("GameStates");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Hands");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
