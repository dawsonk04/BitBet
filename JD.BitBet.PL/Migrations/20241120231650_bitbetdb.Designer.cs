// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    [Migration("20241120231650_bitbetdb")]
    partial class bitbetdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Value")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0211641-af21-47fe-b400-1070e8d26249"),
                            HandId = new Guid("b204e286-064d-470d-a113-188a1ec4b664"),
                            Suit = "King",
                            Value = 10
                        },
                        new
                        {
                            Id = new Guid("49abc5f4-6562-44d1-be61-16b29aa08a3f"),
                            HandId = new Guid("b204e286-064d-470d-a113-188a1ec4b664"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("b41e8021-9fba-4ed6-b813-fbaabc3aa851"),
                            HandId = new Guid("8f2b6662-7a74-475e-8b56-0a6c7eee3d04"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("aa2fea72-945d-4e5e-a929-e572c0a32c64"),
                            HandId = new Guid("8f2b6662-7a74-475e-8b56-0a6c7eee3d04"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("98456ab0-4b09-4455-9141-2069a401ca2d"),
                            HandId = new Guid("c12c3591-ede7-47cc-a329-659f3547e217"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("e6f0bb9a-5f7f-485e-8a8a-cab01a191add"),
                            HandId = new Guid("c12c3591-ede7-47cc-a329-659f3547e217"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("b05506fc-98d6-4612-b4cc-e05799e52ba3"),
                            HandId = new Guid("b3d9d49a-4573-4ff1-a56e-27f260816fcd"),
                            Suit = "King",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("ab5f6c44-2c47-4ff5-907c-f637e16f77d1"),
                            HandId = new Guid("b3d9d49a-4573-4ff1-a56e-27f260816fcd"),
                            Suit = "King",
                            Value = 1
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("53a79816-2c7d-445f-91a1-a4bdc36291d3"),
                            GameResult = 200.0,
                            UserId = new Guid("71f6abb1-90e5-44ab-b405-575b4c4dd10a")
                        },
                        new
                        {
                            Id = new Guid("055a707f-f1a0-4892-b92d-b93be49beccc"),
                            GameResult = 200.0,
                            UserId = new Guid("71f6abb1-90e5-44ab-b405-575b4c4dd10a")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("71f6abb1-90e5-44ab-b405-575b4c4dd10a"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("f4f7e9d5-d674-4cca-9485-3e5eaa2c8904"),
                            CreateDate = new DateTime(2024, 11, 20, 17, 16, 50, 163, DateTimeKind.Local).AddTicks(8426),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e8f8d71-fb93-4dab-95d6-48ba7860fe90"),
                            Balance = 0.0,
                            UserId = new Guid("71f6abb1-90e5-44ab-b405-575b4c4dd10a"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("24c75c5b-e43b-4ab7-bde8-235f0b3a3f6f"),
                            Balance = 0.0,
                            UserId = new Guid("f4f7e9d5-d674-4cca-9485-3e5eaa2c8904"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5dab015a-1db6-4d7e-ac97-63a381879251"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("71f6abb1-90e5-44ab-b405-575b4c4dd10a")
                        },
                        new
                        {
                            Id = new Guid("a3d940be-9406-40e7-804f-7c416af48ab8"),
                            ErrorDateTime = new DateTime(2024, 11, 20, 17, 16, 50, 164, DateTimeKind.Local).AddTicks(1927),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("f4f7e9d5-d674-4cca-9485-3e5eaa2c8904")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("GameId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b204e286-064d-470d-a113-188a1ec4b664"),
                            BetAmount = 20.0,
                            GameId = new Guid("53a79816-2c7d-445f-91a1-a4bdc36291d3"),
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("8f2b6662-7a74-475e-8b56-0a6c7eee3d04"),
                            BetAmount = 20.0,
                            GameId = new Guid("055a707f-f1a0-4892-b92d-b93be49beccc"),
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("c12c3591-ede7-47cc-a329-659f3547e217"),
                            BetAmount = 20.0,
                            GameId = new Guid("53a79816-2c7d-445f-91a1-a4bdc36291d3"),
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("b3d9d49a-4573-4ff1-a56e-27f260816fcd"),
                            BetAmount = 20.0,
                            GameId = new Guid("055a707f-f1a0-4892-b92d-b93be49beccc"),
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e54deddb-422d-41ba-bf87-b2e81cdcb67d"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("6e8f8d71-fb93-4dab-95d6-48ba7860fe90")
                        },
                        new
                        {
                            Id = new Guid("10508944-3342-45c1-b5e1-809971855501"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 20, 17, 16, 50, 163, DateTimeKind.Local).AddTicks(9920),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("6e8f8d71-fb93-4dab-95d6-48ba7860fe90")
                        },
                        new
                        {
                            Id = new Guid("649da6e3-7b73-49c6-96d9-a801e01ac766"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 11, 20, 17, 16, 50, 163, DateTimeKind.Local).AddTicks(9936),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("24c75c5b-e43b-4ab7-bde8-235f0b3a3f6f")
                        },
                        new
                        {
                            Id = new Guid("bb295811-fff5-422a-818f-2b68340f5550"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 20, 17, 16, 50, 163, DateTimeKind.Local).AddTicks(9946),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("24c75c5b-e43b-4ab7-bde8-235f0b3a3f6f")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", "Game")
                        .WithMany("Hands")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblHand_GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Hands");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
