// <auto-generated />
using System;
using JD.BitBet.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JD.BitBet.PL.Migrations
{
    [DbContext(typeof(BitBetEntities))]
    [Migration("20241122214740_bitbetdb")]
    partial class bitbetdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblCard_Id");

                    b.HasIndex("HandId");

                    b.ToTable("tblCard", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f0b5ce3-e41d-4214-8a29-b4a83a78dffa"),
                            HandId = new Guid("799d8e01-b194-4123-b886-bc03eb7ca522"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("fbfb425b-7929-4c6f-b347-7a2dc109b012"),
                            HandId = new Guid("799d8e01-b194-4123-b886-bc03eb7ca522"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("e00940be-8397-4d4c-9460-f7c9bfe9b327"),
                            HandId = new Guid("d914188e-9d81-44e2-ad71-45f518e36476"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("7d08f9bd-516b-4edf-a009-b50cc47f570e"),
                            HandId = new Guid("d914188e-9d81-44e2-ad71-45f518e36476"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("b419fe01-415f-4464-8834-3bb57dff82d0"),
                            HandId = new Guid("919847a5-cee2-45a1-9cd6-5ed7a2a1c8c2"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("5b0dbc8a-4a4f-4a98-8e51-e705d5f7662d"),
                            HandId = new Guid("919847a5-cee2-45a1-9cd6-5ed7a2a1c8c2"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("eda6a01e-b8c6-4c5e-8e20-fff36792d4d3"),
                            HandId = new Guid("0c7a4aea-e477-4f3c-80e2-1d787175c9c4"),
                            Rank = 10,
                            Suit = "King"
                        },
                        new
                        {
                            Id = new Guid("88f58e08-bbbb-4557-b02e-218ac7b370c8"),
                            HandId = new Guid("0c7a4aea-e477-4f3c-80e2-1d787175c9c4"),
                            Rank = 10,
                            Suit = "King"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GameResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblGame_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("884a2de8-21ec-459a-bbf2-4f6323108117"),
                            GameResult = 200.0,
                            UserId = new Guid("d120265c-95ec-408a-b623-af1866aca64f")
                        },
                        new
                        {
                            Id = new Guid("d6e5732f-71bd-411d-a803-00138cd3bdbb"),
                            GameResult = 200.0,
                            UserId = new Guid("d120265c-95ec-408a-b623-af1866aca64f")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("dealerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("dealerHandVal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<bool>("isGameOver")
                        .HasColumnType("bit");

                    b.Property<bool>("isPlayerTurn")
                        .HasColumnType("bit");

                    b.Property<Guid>("playerHandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("playerHandVal")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Pk__tblGameState_Id");

                    b.HasIndex("dealerHandId");

                    b.HasIndex("playerHandId");

                    b.ToTable("tblGameState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("732969e4-24f6-48db-9001-7369e051e583"),
                            dealerHandId = new Guid("799d8e01-b194-4123-b886-bc03eb7ca522"),
                            dealerHandVal = 20,
                            isGameOver = true,
                            isPlayerTurn = true,
                            playerHandId = new Guid("d914188e-9d81-44e2-ad71-45f518e36476"),
                            playerHandVal = 20
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d120265c-95ec-408a-b623-af1866aca64f"),
                            CreateDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "knudtdaw0000@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        },
                        new
                        {
                            Id = new Guid("c747a3a3-3679-4ea1-a946-ae1ebcdca3da"),
                            CreateDate = new DateTime(2024, 11, 22, 15, 47, 39, 847, DateTimeKind.Local).AddTicks(6396),
                            Email = "jbstrange2@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g="
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("Pk__tblWallet_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblWallet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f033ad07-0656-4f15-81f4-94d7d8058360"),
                            Balance = 0.0,
                            UserId = new Guid("d120265c-95ec-408a-b623-af1866aca64f"),
                            WalletAddress = "0xE2dC61497FDD26F9ea285172A41F0b25373f22df"
                        },
                        new
                        {
                            Id = new Guid("06eb2aa2-8451-491a-a996-4920e228d2b6"),
                            Balance = 0.0,
                            UserId = new Guid("c747a3a3-3679-4ea1-a946-ae1ebcdca3da"),
                            WalletAddress = "0xE2dC61497FDD26F9eaYaBoi5373f22df"
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblErrorLog_Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblErrorLog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("adf4c5af-e7c5-45a0-b1d0-8a32319e8409"),
                            ErrorDateTime = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("d120265c-95ec-408a-b623-af1866aca64f")
                        },
                        new
                        {
                            Id = new Guid("49f1a20d-aafb-41a0-8eed-1ee436b91a38"),
                            ErrorDateTime = new DateTime(2024, 11, 22, 15, 47, 39, 847, DateTimeKind.Local).AddTicks(9355),
                            ErrorMessage = "Test",
                            ErrorType = "Login Exception",
                            UserId = new Guid("c747a3a3-3679-4ea1-a946-ae1ebcdca3da")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BetAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<double>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<Guid?>("tblGameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblHand_Id");

                    b.HasIndex("tblGameId");

                    b.ToTable("tblHand", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("799d8e01-b194-4123-b886-bc03eb7ca522"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("d914188e-9d81-44e2-ad71-45f518e36476"),
                            BetAmount = 20.0,
                            Result = -20.0
                        },
                        new
                        {
                            Id = new Guid("919847a5-cee2-45a1-9cd6-5ed7a2a1c8c2"),
                            BetAmount = 20.0,
                            Result = 40.0
                        },
                        new
                        {
                            Id = new Guid("0c7a4aea-e477-4f3c-80e2-1d787175c9c4"),
                            BetAmount = 20.0,
                            Result = -20.0
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("Pk__tblTransaction_Id");

                    b.HasIndex("WalletId");

                    b.ToTable("tblTransaction", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("53a8f9f1-55f2-45de-ab44-56f6d1958221"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(1990, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("f033ad07-0656-4f15-81f4-94d7d8058360")
                        },
                        new
                        {
                            Id = new Guid("2210b5d6-1916-42f0-af11-6d643a4768d9"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 22, 15, 47, 39, 847, DateTimeKind.Local).AddTicks(7896),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("f033ad07-0656-4f15-81f4-94d7d8058360")
                        },
                        new
                        {
                            Id = new Guid("da545e89-db66-4ec8-a983-5c85f5998b3c"),
                            Amount = 1.0,
                            TransactionDate = new DateTime(2024, 11, 22, 15, 47, 39, 847, DateTimeKind.Local).AddTicks(7912),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("06eb2aa2-8451-491a-a996-4920e228d2b6")
                        },
                        new
                        {
                            Id = new Guid("98ab89b8-4ef3-4af2-8566-6b0aaf87ad5a"),
                            Amount = 2.0,
                            TransactionDate = new DateTime(2024, 11, 22, 15, 47, 39, 847, DateTimeKind.Local).AddTicks(7923),
                            TransactionType = "Withdrawal",
                            WalletId = new Guid("06eb2aa2-8451-491a-a996-4920e228d2b6")
                        });
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblCard", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "hand")
                        .WithMany("cards")
                        .HasForeignKey("HandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblCard_HandId");

                    b.Navigation("hand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblGame_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGameState", b =>
                {
                    b.HasOne("JD.BitBet.PL.tblHand", "dealerHand")
                        .WithMany()
                        .HasForeignKey("dealerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("JD.BitBet.PL.tblHand", "playerHand")
                        .WithMany()
                        .HasForeignKey("playerHandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("dealerHand");

                    b.Navigation("playerHand");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWallet_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblErrorLog", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblUser", "User")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tblErrorLog_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblGame", null)
                        .WithMany("Hands")
                        .HasForeignKey("tblGameId");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblTransaction", b =>
                {
                    b.HasOne("JD.BitBet.PL.Entities.tblWallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblTransaction_WalletId");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblGame", b =>
                {
                    b.Navigation("Hands");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblUser", b =>
                {
                    b.Navigation("ErrorLogs");

                    b.Navigation("Games");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("JD.BitBet.PL.Entities.tblWallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("JD.BitBet.PL.tblHand", b =>
                {
                    b.Navigation("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
